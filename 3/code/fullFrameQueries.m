% Computer Vision Project 3
% Turned in by <Michael Single>
% Legi: 08-917-445


% flush context
clc
clear all;
close all;

% load dependencies
run lib/vlfeat-0.9.19/toolbox/vl_setup 

addpath('util/');
addpath('lib/');
addpath('src/');

% assumes that such a file exists, can be generated by running
% the function #computeSiftDataOf(..). See rawDescriptorMatches for its
% usage.
allSiftFeaturesBase = 'data/video_test_all.mat';
wordsPerCluster = 1500;
frameBaseName = 'video_test';

load(allSiftFeaturesBase, 'allFrameNames', 'allPos', ...
    'allOrients', 'allScales', 'allDescr');

[membership, means, rms] = kmeansML(wordsPerCluster, allDescr');

frameCount = length(descrCount);

%%
histData = computeFrameHisto(descrCount, membership, frameCount, wordsPerCluster);
normalizationFScale = sqrt(sum(histData.^2, 2));
randFrames = randperm(frameCount, 3);
for frameIdx = randFrames
    histOfRanFrame = histData(frameIdx, :);
    
    normalFrameF = (repmat(norm(histOfRanFrame),frameCount,1).*normalizationFScale);
    scores = dot(repmat(histOfRanFrame, frameCount,1), histData, 2);
    
    [scores, idxs] = sort(scores ./ normalFrameF, 'descend');
    figure('name', 'foobarize')
    
    currSiftMatFile = strcat(frameBaseName, '_', num2str(idxs(1)), '.mat');
    [currentFrameName, featureCount, positions, ...
        orients, scales, descriptors] = loadOwnSiftDataOf(currSiftMatFile);
    img = imread(strcat('frames/',currentFrameName));
    subplot(2,3,1);
    imshow(img);
    title(strcat('Selected Image ', currentFrameName));
    for k=2:6
        currSiftMatFile = strcat(frameBaseName, '_', num2str(idxs(k)), '.mat');
        [currentFrameName, featureCount, positions, ...
            orients, scales, descriptors] = loadOwnSiftDataOf(currSiftMatFile);
        img = imread(strcat('frames/',currentFrameName));
        subplot(2,3,k);
        imshow(img);
        title(strcat('Matching Imgage', currentFrameName, 'with score: ',num2str(scores(k))));
    end

end
